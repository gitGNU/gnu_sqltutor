@c This file is intended to be included within another document,
@c hence no sectioning command or @node.

Sqltutor is a CGI script and a PostgreSQL database of SQL tutorials,
collections of SQL questions and answers.  

@section How to get Sqltutor

The project is hosted at the Savannah software forge

@url{http://savannah.gnu.org/projects/sqltutor/}

@noindent A copy of the Sqltutor can be get by anonymous CVS access

@url{cvs -z3 -d:pserver:anonymous@@cvs.savannah.gnu.org:/sources/sqltutor co sqltutor}

@subsection How to change implicit settings

All Sqltutor database objects are defined in the SCHEMA
@code{sqltutor}.  Five output variables are defined in
@file{configure.ac} with the following implicit values.

@table @env
@item SQLTUTOR_DATABASE=sqltutor
PostgreSQL database name used by Sqltutor.

@item SQLTUTOR_WWW_USER=sqlquiz
WWW user for CGI script @code{sqlutor} with full access rights to all
tables.

@item SQLTUTOR_PASSWORD=sqlkrok
Password for CGI script for the user @env{SQLTUTOR_WWW_USER}

@item SQLTUTOR_WWW_EXEC=sqlexec
Database role used for running queries entered by
users. @env{SQLTUTOR_WWW_EXEC} is granted @code{SLECT} to datasets'
tables and revoked all rigths on all other @code{sqltutor} tables.

@item SQLTUTOR_PASSEXEC=sqlkrok
Password for CGI script for the user @env{SQLTUTOR_WWW_EXEC}
(implicitly the same password as for @env{SQLTUTOR_WWW_USER}).
@end table

@noindent These macros are used by all modules and you can change
their implicit values if needed in the @file{configure.ac} file.

@section Creating the database 

To create a database, the PostgreSQL server must be up and
running. Database is created with SQL command

@example
CREATE DATABASE SQLTUTOR_DATABASE
@end example

Two database roles must be created for Sqltutor with SQL command
@code{CREATE ROLE}

@example
CREATE ROLE SQLTUTOR_WWW_USER LOGIN;
CREATE ROLE SQLTUTOR_WWW_EXEC LOGIN;
@end example 

@noindent To set passwords for these new roles run @command{psql} and
enter SQL @command{ALTER} command

@example
ALTER USER SQLTUTOR_WWW_USER WITH PASSWORD 'xxx';
ALTER USER SQLTUTOR_WWW_EXEC WITH PASSWORD 'yyy';
@end example

@noindent or passwords can be set directly when creating roles

@example
CREATE ROLE SQLTUTOR_WWW_USER PASSWORD 'xxx' LOGIN;
CREATE ROLE SQLTUTOR_WWW_EXEC PASSWORD 'yyy' LOGIN;
@end example


If PostgreSQL language is not defined in datatabase @code{template1}
you must create it explicitly in the Sqltutor database

@example
su -
su - postgres
psql SQLTUTOR_DATABASE
CREATE LANGUAGE plpgsql;
@end example

@section Building and installing Sqltutor

To create all Makefiles needed for building binary CGI script
@file{sqltutor}, populating Sqltutor database and making info manual
go to Sqltutor home directory and run

@example
   ./configure --bindir=/usr/lib/cgi-bin
@end example

@noindent Parameter @code{--bindir} is optional and defines to which directory
CGI script @file{sqltutor} will be installed.@footnote{For general
information on using GNU autotool see the standard Basic Installation
instructions in the @file{INSTALL}.}

Sqltutor CGI binary with info manual is installed and the database is
populated by running

@example
make DESTDIR=@emph{install_root_directory} install
@end example

@noindent from the main source directory.  Parameter @code{DESTDIR} is 
optional and defines a root directory into which binary
@file{sqltutor} and @file{sqltutor.info} will be installed.  This
parameter is needed if you do not have access ritght for writing to
@file{/usr/local/cgi-bin} and @file{/usr/share/info} (implicit values).


@subsection Sqltutor modules

For installing Sqltutor you normally need only the commands described
in previous sections. However, it is possible to install individual
modules separatelly, for example in cases like preparing new dataset,
new tutorial etc.

Apart from module @code{sqltutor} there are three modules responsible
for populating the database

@table @samp
@item database
SQL schema @code{sqltutor}, general SQL tables and functions

@item tutorial
tutorials table

@item datasets
dataset tables which are used by one or more tutorials
@end table

These three modules can be installed explicitly by running @code{make
install} in their corresponding subdirectories.

@subsubsection Creating schema and general tables

Module @code{database} creates SQL SCHEMA sqltutor and all system
tables used by Sqltutor . This module must be installed before
populating the database.

@example
make -C database install
@end example

The @code{database} modules creates a lock file @file{lock..database}
that protects against inelligible recreation of the database. If you
want to rebuild the dayabase from the scratch, you must remove the
lock file either manully or by running

@example
make -C database clean
@end example

@subsubsection Populating tutorials and datasets

Run in any order from the project home directory

@example
make -C tutorials install
make -C datasets  install
@end example

@noindent If old tutorials and/or datasets have been installed, run

@example
make -C tutorials clean install
make -C datasets  clean install
@end example


